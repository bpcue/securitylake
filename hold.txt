The tables map tells which Security Lake Glue tables you want to share and secure. Each entry supplies the database name and table name that Security Lake already created for a log source. 

tables = {
  cloudtrail = {
    database_name = "aws_security_lake_glue_db_us_east_1"
    table_name    = "aws_security_lake_table_us_east_1_cloud_trail_mgmt_2_0"
  }

  vpc_flow = {
    database_name = "aws_security_lake_glue_db_us_east_1"
    table_name    = "aws_security_lake_table_us_east_1_vpc_flow_2_0"
  }

  security_hub = {
    database_name = "aws_security_lake_glue_db_us_east_1"
    table_name    = "aws_security_lake_table_us_east_1_sh_findings_2_0"
  }
}

aws_iam_role.query: Creating...
aws_iam_role.query: Creation complete after 0s [id=SecurityLakeQueryRole]
aws_iam_role_policy.query_inline: Creating...
╷
│ Error: putting IAM Role (SecurityLakeQueryRole) Policy (SecurityLakeTenantQuery): operation error IAM: PutRolePolicy, https response error StatusCode: 400, RequestID: f35757c3-6e4d-4634-8951-a7e5c31625e2, MalformedPolicyDocument: Policy statement must contain resources.
│
│   with aws_iam_role_policy.query_inline,
│   on main.tf line 97, in resource "aws_iam_role_policy" "query_inline":
│   97: resource "aws_iam_role_policy" "query_inline" {
